# EDIT

# enable simple load balancing assigning a name
upstream example_upstream {
  # use a unix socket as the server, inoperative after one failure (default)
  # unicorn must listen to this socket as well to handle appropriately
  server unix:/path/to/example/app/tmp/to/the.sock fail_timeout=0;
}

# virtual server configuration
server {
	# listen on port 80
  listen 80;

	# sets the maximum body size based on the Content-Length header value
  client_max_body_size 4G;

	# sets the matcher based on the Host header value
  server_name domain.tld www.domain.tld;

	# keep alive then close after listed seconds
  keepalive_timeout 5;

	# specifies the document root for the requests
  root /path/to/example/app/public;

	# prepare a location with the fastest possible lookup
  location / {
	  # configure the proxy header
	  proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;

    # 
		proxy_redirect off;

		# if the file is not a static file, serve through the upstream
    if (!-f $request_filename) {
      proxy_pass http://example_upstream;
      break;
    }
  }

  # error page handling
  error_page 500 502 503 504 /500.html;

	# location entry for static error page
  location = /500.html {
	  # this can be in another location
    root /path/to/example/app/public;
  }
}